package car;

import carDetail.*;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.time.LocalDate;
import java.util.EventObject;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.CellEditorListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;

class MyRendererAndEditor implements TableCellRenderer, TableCellEditor {

    private JButton btn;
    private int row;

    public MyRendererAndEditor(JTable table, ListCar list) {
        btn = new JButton("Xóa");
        btn.setMargin(new Insets(-12, -10, -10, -10));
        btn.addActionListener((ActionEvent e) -> {

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            int i = JOptionPane.showConfirmDialog(btn, "Bạn có chắc chắn muốn xóa không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                String id = (String) model.getValueAt(row, 1);

                list.deleteById(id);

                model.removeRow(row);
                try {
                    list.writeToFile();
                } catch (Exception ex) {
                    Logger.getLogger(MyRendererAndEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
                ListCarDetail listDetail = new ListCarDetail();
                try {
                    listDetail.loadFile();
                    listDetail.deleteById(id);
                    listDetail.writeToFile();
                } catch (Exception ex) {
                    Logger.getLogger(MyRendererAndEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        return btn;
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        this.row = row;
        return btn;
    }

    @Override
    public Object getCellEditorValue() {
        return true;
    }

    @Override
    public boolean isCellEditable(EventObject anEvent) {
        return true;
    }

    @Override
    public boolean shouldSelectCell(EventObject anEvent) {
        return true;
    }

    @Override
    public boolean stopCellEditing() {
        return true;
    }

    @Override
    public void cancelCellEditing() {
    }

    @Override
    public void addCellEditorListener(CellEditorListener l) {
    }

    @Override
    public void removeCellEditorListener(CellEditorListener l) {
    }

}

public final class CarManager extends javax.swing.JFrame {

    ListCar list = new ListCar();
    ListCarDetail listDetail = new ListCarDetail();
    DefaultTableModel tbModel = null;
    private int type = 0;

    /**
     * Creates new form CarManager
     *
     * @param type
     */
    public CarManager(int type) {
        this.type = type;

        initComponents();

        initData();
        setLocationRelativeTo(null);
    }

    void initData() {
        tbModel = new DefaultTableModel();
        tbModel.setColumnIdentifiers(new Object[]{
            "STT", "ID", "Name", "Brand", "Year", "Amount", "Cost", " "
        });
        refreshData();
    }

    private void refreshData() throws HeadlessException {
        try {
            list.loadFile();
            listDetail.loadFile();
            list.renderToTable(tbModel);
            tableCar.setModel(tbModel);
            tableCar.getColumn(" ").setCellRenderer((TableCellRenderer) new MyRendererAndEditor(tableCar, list));
            tableCar.getColumn(" ").setCellEditor((TableCellEditor) new MyRendererAndEditor(tableCar, list));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
        btSPCon.setText(String.valueOf(list.sumAmount()));
        btSPDaBan.setText(String.valueOf(listDetail.sumAmount()));
        tfId.setEnabled(false);
        fillData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCar = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btUpdate = new javax.swing.JButton();
        tfId = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        tfBrand = new javax.swing.JTextField();
        tfYear = new javax.swing.JTextField();
        tfAmount = new javax.swing.JTextField();
        tfCost = new javax.swing.JTextField();
        btReset = new javax.swing.JButton();
        btDetail = new javax.swing.JButton();
        btFind = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfSoLuong = new javax.swing.JTextField();
        btXuat = new javax.swing.JButton();
        btNhap = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btClose = new javax.swing.JButton();
        btRefresh = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        btSort = new javax.swing.JButton();
        cbbSort = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btSPCon = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btSPDaBan = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Car manager");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách sản phẩm"));

        tableCar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "ID", "Name", "Brand", "Year", "Amount", "Cost", ""
            }
        ));
        tableCar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCar);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin sản phẩm"));

        jLabel3.setText("Tên sản phẩm:");

        jLabel4.setText("Hãng sản xuất:");

        jLabel5.setText("Năm sản xuất:");

        jLabel6.setText("Số lượng:");

        jLabel7.setText("Đơn giá:");

        jLabel2.setText("Mã sản phẩm:");

        btUpdate.setText("Cập nhật");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        tfAmount.setEnabled(false);

        tfCost.setEnabled(false);

        btReset.setText("Reset");
        btReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResetActionPerformed(evt);
            }
        });

        btDetail.setText("Lịch sử");
        btDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDetailActionPerformed(evt);
            }
        });

        btFind.setText("Tìm kiếm");
        btFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tfAmount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(tfBrand, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfId, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfName, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(tfYear)
                            .addComponent(tfCost)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btFind)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btReset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tfYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(tfCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(tfAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btUpdate)
                    .addComponent(btReset)
                    .addComponent(btDetail)
                    .addComponent(btFind))
                .addGap(6, 6, 6))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Nhập xuất kho"));

        jLabel1.setText("Số lượng:");

        btXuat.setText("Xuất kho");
        btXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXuatActionPerformed(evt);
            }
        });

        btNhap.setText("Nhập kho ");
        btNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNhapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btXuat)
                    .addComponent(btNhap))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thao tác"));

        btClose.setText("Thoát");
        btClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCloseActionPerformed(evt);
            }
        });

        btRefresh.setText("Refresh");
        btRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefreshActionPerformed(evt);
            }
        });

        btAdd.setText("Thêm mới");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btSort.setText("Sắp xếp theo");
        btSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSortActionPerformed(evt);
            }
        });

        cbbSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Tên", "Số lượng", "Giá" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btSort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btClose, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btClose)
                    .addComponent(btRefresh)
                    .addComponent(btAdd)
                    .addComponent(btSort)
                    .addComponent(cbbSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Thống kê"));

        jLabel8.setText("Số lượng sản phẩm còn:");

        btSPCon.setEnabled(false);

        jLabel9.setText("Số lượng sản phẩm đã bán:");

        btSPDaBan.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(btSPCon, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(btSPDaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(btSPCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(btSPDaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Chương trình quản lý kho");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        // TODO add your handling code here:
        new New().setVisible(true);
    }//GEN-LAST:event_btAddActionPerformed

    private void btRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefreshActionPerformed
        // TODO add your handling code here:
        refreshData();
    }//GEN-LAST:event_btRefreshActionPerformed

    private void tableCarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCarMouseClicked
        // TODO add your handling code here:

        int row = tableCar.getSelectedRow();
        String id = tableCar.getValueAt(row, 1).toString();

        if (id != null) {
            Car car = list.findById(id);
            fillData(car);
            tfId.setEnabled(false);
        }
    }//GEN-LAST:event_tableCarMouseClicked

    private void fillData(Car car) {
        tfId.setText(car.getId());
        tfName.setText(car.getName());
        tfBrand.setText(car.getBrand());
        tfYear.setText(String.valueOf(car.getYear()));
        tfAmount.setText(String.valueOf(car.getAmount()));
        tfCost.setText(String.valueOf(car.getCost()));
    }

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        boolean flag = false;

        String id = tfId.getText();
        if ("".equals(id)) {
            JOptionPane.showMessageDialog(this, "Hãy chọn sản phẩm để chỉnh sửa!");
            return;
        }

        String name = tfName.getText();
        String year = tfYear.getText();
        int year1 = 0;
        String brand = tfBrand.getText();
        String amount = tfAmount.getText();
        int amount1 = 0;
        String cost = tfCost.getText();
        double cost1 = 0;

        // kiem tra textField co duoc nhap ko
        if ("".equals(name)) {
            flag = true;
        } else if ("".equals(year)) {
            flag = true;
        } else if ("".equals(brand)) {
            flag = true;
        } else if ("".equals(amount)) {
            flag = true;
        } else {
            flag = "".equals(cost);
        }

        if (flag) {
            JOptionPane.showMessageDialog(this, "Dữ liệu không được để trống!");
            return;
        }

        // kiem tra du lieu nhap vao co hon le ko
        try {
            year1 = Integer.parseInt(year);
        } catch (NumberFormatException e) {
            sb.append("\"Năm sản xuất\" phải là một chữ số!\n");
        }
        try {
            amount1 = Integer.parseInt(amount);
        } catch (NumberFormatException e) {
            sb.append("\"Số lượng\" phải là một chữ số!\n");
        }
        try {
            cost1 = Double.parseDouble(cost);
        } catch (NumberFormatException e) {
            sb.append("\"Đơn giá\" phải là một chữ số!\n");
        }
        if (!sb.isEmpty()) {
            JOptionPane.showMessageDialog(this, sb);
            return;
        }

        Car car = new Car(id, name, brand, year1, amount1, cost1);
        if (list.replace(id, car)) {
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        }
        try {
            list.writeToFile();
        } catch (Exception ex) {
            Logger.getLogger(CarManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        refreshData();
    }//GEN-LAST:event_btUpdateActionPerformed

    private void btResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResetActionPerformed
        fillData();
        tfId.setEnabled(true);
    }//GEN-LAST:event_btResetActionPerformed

    private void fillData() {
        // TODO add your handling code here:
        tfId.setText("");
        tfName.setText("");
        tfYear.setText("");
        tfBrand.setText("");
        tfAmount.setText("");
        tfCost.setText("");
    }

    private void btDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDetailActionPerformed
        // TODO add your handling code here:
        String id = tfId.getText();
        if ("".equals(id)) {
            JOptionPane.showMessageDialog(this, "Hãy chọn sản phẩm để hiển thị!");
            return;
        }

        try {
            Detail d = new Detail(list.findById(id));
            d.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(CarManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btDetailActionPerformed

    private void btNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNhapActionPerformed
        // TODO add your handling code here:
        String id = tfId.getText();
        if ("".equals(id)) {
            JOptionPane.showMessageDialog(this, "Hãy chọn một sản phẩm!");
            return;
        }

        if ("".equals(tfSoLuong.getText())) {
            JOptionPane.showMessageDialog(this, "\"Số lượng\" không được để trống!");
            return;
        }
        int n = 0;
        try {
            n = Integer.parseInt(tfSoLuong.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "\"Số lượng\" phải là một chữ số!\n");
            return;
        }

        if (n <= 0) {
            JOptionPane.showMessageDialog(this, "\"Số lượng\" phải lớn hơn 0!");
            return;
        }

        Car car = list.findById(id);
        if (car != null) {
            car.setAmount(car.getAmount() + n);
            if (list.replace(id, car)) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            }
            try {
                list.writeToFile();
            } catch (Exception ex) {
                Logger.getLogger(CarManager.class.getName()).log(Level.SEVERE, null, ex);
            }
            refreshData();

            CarDetail cdt = new CarDetail(id, LocalDate.now(), null, n, n * car.getCost());

            try {
                listDetail.add(cdt);
                listDetail.writeToFile();
            } catch (Exception ex) {
                Logger.getLogger(CarManager.class.getName()).log(Level.SEVERE, null, ex);
            }
            tfSoLuong.setText("");

        } else {
            JOptionPane.showMessageDialog(this, "Sản phẩm không tồn tại!");
            fillData();
        }
    }//GEN-LAST:event_btNhapActionPerformed

    private void btXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXuatActionPerformed
        // TODO add your handling code here:
        String id = tfId.getText();
        if ("".equals(id)) {
            JOptionPane.showMessageDialog(this, "Hãy chọn một sản phẩm!");
            return;
        }

        Car car = list.findById(id);

        if (car != null) {
            if (car.getAmount() == 0) {
                JOptionPane.showMessageDialog(this, "Hàng tồn kho đã hết!");
                return;
            }

            if ("".equals(tfSoLuong.getText())) {
                JOptionPane.showMessageDialog(this, "\"Số lượng\" không được để trống!");
                return;
            }
            int n = 0;
            try {
                n = Integer.parseInt(tfSoLuong.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "\"Số lượng\" phải là một số nguyên!");
                return;
            }
            if (n <= 0) {
                JOptionPane.showMessageDialog(this, "\"Số lượng\" phải lớn hơn 0!");
                return;
            }

            if (n > car.getAmount()) {
                JOptionPane.showMessageDialog(this, "\"Số lượng\" không hợp lệ!");
                return;
            }

            car.setAmount(car.getAmount() - n);
            if (list.replace(id, car)) {
                JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
            }
            try {
                list.writeToFile();
            } catch (Exception ex) {
                Logger.getLogger(CarManager.class.getName()).log(Level.SEVERE, null, ex);
            }
            refreshData();

            CarDetail cdt = new CarDetail(id, null, LocalDate.now(), n, n * car.getCost());

            try {
                listDetail.add(cdt);
                listDetail.writeToFile();
            } catch (Exception ex) {
                Logger.getLogger(CarManager.class.getName()).log(Level.SEVERE, null, ex);
            }
            refreshData();
            tfSoLuong.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Sản phẩm không tồn tại!");
            fillData();
        }
    }//GEN-LAST:event_btXuatActionPerformed

    private void btCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCloseActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btCloseActionPerformed

    private void btSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSortActionPerformed
        // TODO add your handling code here:
        switch (cbbSort.getSelectedIndex()) {
            case 0 ->
                list.sortById();
            case 1 ->
                list.sortByName();
            case 2 ->
                list.sortByAmount();
            default ->
                list.sortByCost();
        }
        try {
            list.writeToFile();
        } catch (Exception ex) {
            Logger.getLogger(CarManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        refreshData();
    }//GEN-LAST:event_btSortActionPerformed

    private void btFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFindActionPerformed
        // TODO add your handling code here:
        if (tfId.getText().equals("") && tfName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Hãy nhập id hoặc tên sản phẩm cần tìm kiếm!");
            tfId.setEnabled(true);
        } else if (!tfId.getText().equals("") && !tfName.getText().equals("")) {
            String i = JOptionPane.showInputDialog(this, "Bạn muốn tìm kiếm theo id hay tên sản phẩm?\n  1. Id\n  2. Tên sản phẩm");
            if (i == null) {
                return;
            }
            if (i.equals("1")) {
                String id = tfId.getText();
                Car car = list.findById(id);
                if (car != null) {
                    fillData(car);
                    tfId.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(this, "ID không tồn tại!");
                    tfId.setEnabled(true);
                }
            }
            if (i.equals("2")) {
                String id = tfName.getText();
                Car car = list.findByName(id);
                if (car != null) {
                    fillData(car);
                    tfId.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Tên sản phẩm không tồn tại!");
                    tfId.setEnabled(true);
                }
            }
        } else {
            if (tfName.getText().equals("")) {
                String id = tfId.getText();
                Car car = list.findById(id);
                if (car != null) {
                    fillData(car);
            tfId.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(this, "ID không tồn tại!");
                    tfId.setEnabled(true);
                }
            }
            if (tfId.getText().equals("")) {
                String id = tfName.getText();
                Car car = list.findByName(id);
                if (car != null) {
                    fillData(car);
            tfId.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Tên sản phẩm không tồn tại!");
                    tfId.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_btFindActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CarManager(0).setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btClose;
    private javax.swing.JButton btDetail;
    private javax.swing.JButton btFind;
    private javax.swing.JButton btNhap;
    private javax.swing.JButton btRefresh;
    private javax.swing.JButton btReset;
    private javax.swing.JTextField btSPCon;
    private javax.swing.JTextField btSPDaBan;
    private javax.swing.JButton btSort;
    private javax.swing.JButton btUpdate;
    private javax.swing.JButton btXuat;
    private javax.swing.JComboBox<String> cbbSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCar;
    private javax.swing.JTextField tfAmount;
    private javax.swing.JTextField tfBrand;
    private javax.swing.JTextField tfCost;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfSoLuong;
    private javax.swing.JTextField tfYear;
    // End of variables declaration//GEN-END:variables
}
